name: Maven Build and Publish to GitHub Packages

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0, v1.2.3, v2.0.0-RC1 etc.

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read   # Required to checkout the repository code
      packages: write  # Required to publish packages to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21' # Or your desired Java version (e.g., '21')
          distribution: 'temurin' # Or 'adopt', 'microsoft', etc.
          # This will generate a settings.xml in the workspace root
          # with a server entry for 'github' and credentials using GITHUB_TOKEN.
          settings-path: ${{ github.workspace }}
          server-id: github

      - name: Extract version from tag
        id: get_version
        run: |
          # GITHUB_REF_NAME for tag 'v1.2.3' is 'v1.2.3'
          # We remove the 'v' prefix to get '1.2.3'
          VERSION="${GITHUB_REF_NAME#v}"
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Update POM version to tag version
        # This step ensures the pom.xml's <version> matches the tag version
        # before building and deploying.
        run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }} -DgenerateBackupPoms=false

      - name: Build with Maven
        # Runs tests and builds the artifact
        run: mvn clean install -B # -B for batch mode (non-interactive)

      - name: Publish to GitHub Packages
        # The -s flag points to the settings.xml generated by setup-java
        # This settings.xml contains the necessary authentication for GitHub Packages.
        run: mvn deploy -s ${{ github.workspace }}/settings.xml
        env:
          # GITHUB_TOKEN is automatically provided by GitHub Actions
          # and used by setup-java to configure settings.xml.
          # Explicitly setting it here ensures it's available for Maven if needed.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
